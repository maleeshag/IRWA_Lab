# -*- coding: utf-8 -*-
"""lab3_sir_version

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z1VWVS0pCBXQvEPIasR7EfCchJvAsxrq
"""

from nltk.util import ngrams
import os

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')
# %cd /content/drive/My Drive/IRWA_LAB_03

def ngram_text(n):
  directory=os.getcwd()+'/ngram'
  filelist=os.listdir(directory)
  for file in filelist:
    with open(os.getcwd()+'/ngram/'+file,'r')as f:
      sentence=str(f.read())
      n_gram=ngrams(sentence,n)
      x=[''.join(n).replace(" ","$") for n in  n_gram]
      print(x)

ngram_text(2)

#Question 01(b)
from nltk.util import ngrams
import os

def jaccard(x,y):
  a=x.intersection(y)
  b=x.union(y)
  return len(a)/len(b)

doc1=open(os.getcwd()+'/ngram/D1.txt','r')
doc2=open(os.getcwd()+'/ngram/D2.txt','r')

sentence_1=doc1.read()
sentence_2=doc2.read()

n_gram=ngrams(sentence_1,3)
x=[''.join(n).replace(" ","$") for n in n_gram]
print(x)

n_gram=ngrams(sentence_2,3)
y=[''.join(n).replace(" ","$") for n in n_gram]
print(y)

print(jaccard(set(x),set(y)))

#Question(02)
from nltk.metrics.distance import edit_distance

print(edit_distance('python','pythonly'))

pip install python-Levenshtein

import Levenshtein as lv
print(lv.distance('python','pythonly'))

#Question (03)
def get_soundex(name):
  soundex=""
  soundex +=name[0]
  name=name.upper()
  dictionary={'BFPV':"1","CGJKQSXZ":"2","DT":"3","L":"4","MN":"5","R":"6","AEIOUHWY":"6"}
  for char in name[1:]:
    for key in dictionary.keys():
      if char in key:
        code=dictionary[key]
        if code !=soundex[-1]:
          soundex+=code
  soundex=soundex.replace("0","")
  soundex=soundex[:4].ljust(4,"0")
  return (soundex)

get_soundex("son")